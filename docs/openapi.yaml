openapi: 3.0.0
info:
  title: WakeOnStorage API
  version: 1.0.0
servers:
  - url: /api
paths:
  /services:
    get:
      summary: Liste les services disponibles
      responses:
        '200':
          description: Liste des services
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
        '403':
          $ref: '#/components/responses/AuthError'
  /{service}/status:
    get:
      summary: Etat du service
      parameters:
        - in: path
          name: service
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Etat du service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '403':
          $ref: '#/components/responses/AuthError'
  /{service}/count:
    get:
      summary: Nombre de connexions actives
      parameters:
        - in: path
          name: service
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Nombre de connexions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Count'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '403':
          $ref: '#/components/responses/AuthError'
  /{service}/up:
    post:
      summary: Allume le service
      parameters:
        - in: path
          name: service
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resultat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '403':
          $ref: '#/components/responses/AuthError'
  /{service}/down:
    post:
      summary: Eteint le service
      parameters:
        - in: path
          name: service
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resultat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '403':
          $ref: '#/components/responses/AuthError'
  /{service}/down-force:
    post:
      summary: Forcer l'arret du service
      parameters:
        - in: path
          name: service
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Resultat
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Result'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '403':
          $ref: '#/components/responses/AuthError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Service:
      type: object
      properties:
        service:
          type: string
        type:
          type: string
    Status:
      type: object
      properties:
        status:
          type: string
          enum: [up, down]
    Count:
      type: object
      properties:
        count:
          type: integer
    Result:
      type: object
      properties:
        success:
          type: boolean
          nullable: true
        info:
          type: string
          nullable: true
        error:
          type: string
          nullable: true
        command:
          type: string
          nullable: true
        output:
          type: string
          nullable: true
    Error:
      type: object
      properties:
        error:
          type: string
  responses:
    AuthError:
      description: Jeton manquant ou invalide
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFoundError:
      description: Service inconnu
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
security:
  - bearerAuth: []
